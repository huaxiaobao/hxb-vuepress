(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{446:function(s,t,a){"use strict";a.r(t);var e=a(3),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p"),t("div",{staticClass:"table-of-contents"},[t("ul")]),t("p"),s._v(" "),t("h2",{attrs:{id:"发布到-github-io"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#发布到-github-io"}},[s._v("#")]),s._v(" 发布到 github.io")]),s._v(" "),t("p",[s._v("若我们在使用项目的时候，没有关联到 github 仓库,那我们先需要对 github 仓库进行关联\n关联完成之后，我们需要做如下操作：")]),s._v(" "),t("h3",{attrs:{id:"修改-config-js-文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改-config-js-文件"}},[s._v("#")]),s._v(" 修改 "),t("code",[s._v("config.js")]),s._v(" 文件")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("修改 base 路径")]),s._v(" "),t("p",[s._v("基路径的修改，和你 github 的目录结构有关")]),s._v(" "),t("p",[s._v("如果你打算发布到 "),t("code",[s._v("https://<USERNAME>.github.io/")]),s._v('，则可以省略这一步，因为 base 默认即是 "'),t("code",[s._v("/")]),s._v('"。')]),s._v(" "),t("p",[s._v("如果你打算发布到 "),t("code",[s._v("https://<USERNAME>.github.io/<REPO>/")]),s._v("（也就是说你的仓库在 "),t("code",[s._v("https://github.com/<USERNAME>/<REPO>")]),s._v('），则将 base 设置为 "'),t("code",[s._v("/<REPO>/")]),s._v('"。')]),s._v(" "),t("p",[s._v("换种理解，如果你的仓库名字 my-vupress,你的代码直接放在这个里面，你就不需要修改路径，如果你的代码是放在 my-vuepress 下面的 vuepress 目录，你的 "),t("code",[s._v("base")]),s._v(" 就要设置成  "),t("code",[s._v("/my-vuepress/")])])]),s._v(" "),t("h2",{attrs:{id:"新增-deploy-sh文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#新增-deploy-sh文件"}},[s._v("#")]),s._v(" 新增 "),t("code",[s._v("deploy.sh")]),s._v("文件")]),s._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[s._v("注意：")]),s._v(" "),t("p",[s._v("1、请注意修改 文件中  "),t("code",[s._v("cd docs/.vuepress/dist")]),s._v(" 中的 docs，这个 docs 为 根目录的名称")]),s._v(" "),t("p",[s._v("2、修改 "),t("code",[s._v("git push -f git@github.com:<USERNAME>/<REPO>.git master:gh-pages")]),s._v(" 中的 "),t("code",[s._v("usename")]),s._v("和 "),t("code",[s._v("<REPO>")]),s._v("(项目目录)")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/usr/bin/env sh")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 确保脚本抛出遇到的错误")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-e")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 生成静态文件")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run docs:build\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入生成的文件夹")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" docs/.vuepress/dist\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果是发布到自定义域名")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo 'www.example.com' > CNAME")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" init\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-A")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-m")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'deploy'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果发布到 https://<USERNAME>.github.io")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# git push -f git@github.com:<USERNAME>/<USERNAME>.github.io.git master")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果发布到 https://<USERNAME>.github.io/<REPO>")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" push "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" git@github.com:"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("USERNAME"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("REPO"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(".git master:gh-pages\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" -\n\n")])])]),t("h2",{attrs:{id:"新增-package-json-脚本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#新增-package-json-脚本"}},[s._v("#")]),s._v(" 新增 package.json 脚本")]),s._v(" "),t("p",[s._v("在 "),t("code",[s._v("package.json")]),s._v(" 文件的 "),t("code",[s._v("script")]),s._v(" 中新增 如下脚本")]),s._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"deploy"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bash deploy.sh"')]),s._v("\n")])])]),t("h2",{attrs:{id:"github-仓库设置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#github-仓库设置"}},[s._v("#")]),s._v(" github 仓库设置")]),s._v(" "),t("p",[s._v("在github 仓库中，找到 gh-pages 这个分支，然后在 右边的设置按钮填写相关信息，在Website 设置中， Use your GitHub Pages website 打上勾，然后会出来一个网址，记录好这个网址，然后保存！")]),s._v(" "),t("h2",{attrs:{id:"效果"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#效果"}},[s._v("#")]),s._v(" 效果")]),s._v(" "),t("p",[s._v("访问 刚刚在github 中得到那个网址，我们整个的 github 部署流程就完成了！")])])}),[],!1,null,null,null);t.default=n.exports}}]);